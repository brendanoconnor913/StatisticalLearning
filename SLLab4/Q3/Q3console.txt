> glm.fit = glm(default~balance+income, Default, family="binomial")
> summary(glm.fit)

Call:
glm(formula = default ~ balance + income, family = "binomial", 
    data = Default)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.4725  -0.1444  -0.0574  -0.0211   3.7245  

Coefficients:
              Estimate Std. Error z value Pr(>|z|)    
(Intercept) -1.154e+01  4.348e-01 -26.545  < 2e-16 ***
balance      5.647e-03  2.274e-04  24.836  < 2e-16 ***
income       2.081e-05  4.985e-06   4.174 2.99e-05 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 2920.6  on 9999  degrees of freedom
Residual deviance: 1579.0  on 9997  degrees of freedom
AIC: 1585

Number of Fisher Scoring iterations: 8

> summary(glm.fit)$coeff
                 Estimate   Std. Error    z value      Pr(>|z|)
(Intercept) -1.154047e+01 4.347564e-01 -26.544680 2.958355e-155
balance      5.647103e-03 2.273731e-04  24.836280 3.638120e-136
income       2.080898e-05 4.985167e-06   4.174178  2.990638e-05
> summary(glm.fit)$coeff$Estimate
Error in summary(glm.fit)$coeff$Estimate : 
  $ operator is invalid for atomic vectors
> summary(glm.fit)$coeff[,1]
  (Intercept)       balance        income 
-1.154047e+01  5.647103e-03  2.080898e-05 
> boot = function(data, index) {
+     glm.fit = glm(default~balance+income, data, family="binomial", subset=index)
+     return summary(glm.fit)$coeff[,1]
Error: unexpected symbol in:
"    glm.fit = glm(default~balance+income, data, family="binomial", subset=index)
    return summary"
> }
Error: unexpected '}' in "}"
> boot = function(data, index) {
+     glm.fit = glm(default~balance+income, data, family="binomial", subset=index)
+     results = summary(glm.fit)$coeff[,1]
+     return results
Error: unexpected symbol in:
"    results = summary(glm.fit)$coeff[,1]
    return results"
> }
Error: unexpected '}' in "}"
> boot = function(data, index) {
+     glm.fit = glm(default~balance+income, data, family="binomial", subset=index)
+     return summary(glm.fit)$coeff
Error: unexpected symbol in:
"    glm.fit = glm(default~balance+income, data, family="binomial", subset=index)
    return summary"
> }
Error: unexpected '}' in "}"
> boot = function(data, index) {
+     glm.fit = glm(default~balance+income, data, family="binomial", subset=index)
+     results = summary(glm.fit)
+     return results
Error: unexpected symbol in:
"    results = summary(glm.fit)
    return results"
> }
Error: unexpected '}' in "}"
> boot = function(data, index) {
+     glm.fit = glm(default~balance+income, data, family="binomial", subset=index)
+     results = summary(glm.fit)
+     return(results)
+ }
> boot = function(data, index) {
+     glm.fit = glm(default~balance+income, data, family="binomial", subset=index)
+     results = summary(glm.fit)$coeff[,1]
+     return(results)
+ }
> boot.fn = function(data, index) {
+     glm.fit = glm(default~balance+income, data, family="binomial", subset=index)
+     results = summary(glm.fit)$coeff[,1]
+     return(results)
+ }
> boot(Default,boot.fn,R=1000)
Error in boot(Default, boot.fn, R = 1000) : unused argument (R = 1000)
> boot(Default,boot.fn)
 Show Traceback
 
 Rerun with Debug
 Error in `[.default`(xj, i) : invalid subscript type 'closure' > boot.fn(Default,1:100)
  (Intercept)       balance        income 
-2.656607e+01  6.026322e-20  2.189904e-19 
> boot(Default,boot.fn,R=1000)
Error in boot(Default, boot.fn, R = 1000) : unused argument (R = 1000)
> library(boot)

Attaching package: ‘boot’

The following object is masked _by_ ‘.GlobalEnv’:

    boot

> library(Boot)
Error in library(Boot) : there is no package called ‘Boot’
> boot(Default,boot.fn,R=1000)
Error in boot(Default, boot.fn, R = 1000) : unused argument (R = 1000)
> View(boot)
> View(boot)
> View(boot)
> View(boot)
> View(boot)
> View(boot)
> View(boot)
> del(boot)
Error in del(boot) : could not find function "del"
> rm(boot)
> library(boot)
> boot(Default,boot.fn,R=1000)

ORDINARY NONPARAMETRIC BOOTSTRAP


Call:
boot(data = Default, statistic = boot.fn, R = 1000)


Bootstrap Statistics :
         original        bias     std. error
t1* -1.154047e+01 -7.025924e-03 4.256407e-01
t2*  5.647103e-03  1.762463e-06 2.271911e-04
t3*  2.080898e-05  4.635898e-08 4.599874e-06
>
